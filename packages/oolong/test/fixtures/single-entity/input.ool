type
  password : text maxLength(200)
  email : text maxLength(200) ~isEmail    
  phone : text maxLength(20) ~matches(/^((\+|00)\d+)?\d+(-\d+)?$/)
  userStatus : enum values(['inactive', 'active', 'disabled', 'forbidden', 'deleted'])

entity user
  -- 'User Credential';

  with
    autoId({ startFrom: 100000 })
    createTimestamp
    updateTimestamp
    logicalDeletion({ status: 'deleted' })
    stateTracking("status")
    atLeastOneNotNull([ 'email', 'mobile' ])

  has
    email 
    mobile : phone ~isMobilePhone(@latest.locale |> stringDasherize) |> normalizeMobile
    password |> hashPassword(@latest.passwordSalt) ~isHash
    passwordSalt : text fixedLength(32) auto readOnly fixedValue
    displayName : text maxLength(40) optional
    locale : text maxLength(10) default('en_AU')
    isEmailVerified : bool default(false)
    isMobileVerified : bool default(false) -- 'Flag indicates mobile verified or not'
    status : userStatus default('inactive')
    tag : array valueType('text') optional

  associations  
    hasMany personalProfile 
    hasMany securityGroup      

  index
    email unique
    mobile unique
