type
  password : text maxLength(200)
  email : text maxLength(200) ~isEmail
  phone : text maxLength(20) ~matches(/^((\+|00)\d+)?\d+(-\d+)?$/)
  userStatus : enum values("inactive", "active", "disabled", "forbidden", "deleted")
  name : text maxLength(20)

entity user
  -- "User Credential"
  with
    autoId({"startFrom":100000})
    createTimestamp
    updateTimestamp
    logicalDeletion({"status":"deleted"})
    stateTracking("status")
    atLeastOneNotNull(["email","mobile"])

  has
    email -- "User Email"
    mobile : phone ~isMobilePhone(@latest.locale |>stringDasherize) |>normalizeMobile -- "User Mobile"
    password |>hashPassword(@latest.passwordSalt) -- "User Password"
    passwordSalt : text fixedLength(8) auto -- "User Password Salt"
    locale : text default("en_AU") -- "User Locale"
    status : userStatus default("inactive") -- "User Status"

  associations
    hasMany 'profile'
    hasMany 'group' through 'usergroup'

  index
    email is unique
    mobile is unique
